import Head from "next/head";
import Navbar from "../../components/Navbar";
import InputField from "../../components/InputField";
import Image from "next/image";
import Link from "next/link";
import Logo from "../../components/Logo";

export default function Authentication() {
  return (
    <div>
      <Head>
        <title>LoopoKrator - Authenticate</title>
        {/* <meta name="description" content="Generated by create next app" /> */}
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main data-theme="light">
        <div className="page-content" style={{ overflow: "hidden" }}>
          <Navbar />
          <div className="authentication-container">
            <div className="left-side">
              <form id="login-form" onSubmit={logInHandler}>
                <div className="welcome-message" style={{ marginInline: "0" }}>
                  <span className="important-text">Happy</span> to see you back!
                </div>
                <InputField
                  className="loopokrator-text-input"
                  type="email"
                  id="email"
                  dataLabel="Email"
                />
                <InputField
                  className="loopokrator-text-input"
                  type="password"
                  id="password"
                  dataLabel="Password"
                />
                <button className="loopokrator-btn" type="submit">
                  LOG IN
                </button>
                <p>
                  Don't have an account?
                  <a className="link-text" onClick={swapForm}>
                    Register Instead
                  </a>
                </p>
              </form>
              <form id="register-form" onSubmit={registerHandler}>
                <div className="welcome-message" style={{ marginInline: "0" }}>
                  I personaly welcome you to
                  <Logo />
                </div>
                <InputField
                  className="loopokrator-text-input"
                  type="email"
                  id="email"
                  dataLabel="Email"
                />
                <InputField
                  className="loopokrator-text-input"
                  type="text"
                  id="name"
                  dataLabel="Name"
                />
                <InputField
                  className="loopokrator-text-input"
                  type="password"
                  id="password"
                  dataLabel="Password"
                />
                <InputField
                  className="loopokrator-text-input"
                  type="password"
                  id="rep-password"
                  dataLabel="Repeat Password"
                />
                <button className="loopokrator-btn" type="submit">
                  REGISTER
                </button>
                <p>
                  Already have an account?
                  <a className="link-text" onClick={swapForm}>
                    Log In Instead
                  </a>
                </p>
              </form>
            </div>
            <div className="right-side">
              <div className="flourish-container">
                <div id="me-container" data-show="false">
                  <div className="flourish-ball-transparent medium second"></div>
                  <div className="flourish-thats-me"></div>
                </div>
                <div className="flourish-ball-opaque big corner"></div>
                <div className="flourish-ball-opaque small"></div>
                <div className="flourish-ball-transparent big"></div>
                <div className="flourish-ball-transparent medium first"></div>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}

async function logInHandler(e) {
  e.preventDefault();
  console.log("Log in attempt");

  // Collect data
  const form = e.target;
  const userCredentials = {
    email: "",
    password: "",
  };

  userCredentials.email = form.querySelector("#email").value;
  userCredentials.password = form.querySelector("#password").value;

  console.log(userCredentials);

  // Send data to API

  const res = await fetch("/api/hello");
  console.log(res.json());

  // Mock Being Connected
  sessionStorage.setItem("user", "connected");

  window.location = "/";
}

async function registerHandler(e) {
  e.preventDefault();
  console.log("Register attempt");

  // Collect data

  const form = e.target;

  // console.log(form);

  const userCredentials = {
    email: "",
    name: "",
    password: "",
  };

  // const formData = new FormData();

  // formData.append("data", form);

  userCredentials.email = form.querySelector("#email").value;
  userCredentials.name = form.querySelector("#name").value;
  userCredentials.password = form.querySelector("#password").value;
  const repPass = form.querySelector("#rep-password").value;

  repPass !== userCredentials.password
    ? console.log("Passwords do not match")
    : "";

  console.log(userCredentials);

  const res = await fetch("/api/hello");
  console.log(res.json());
  window.location = "/";
}

function swapForm(e) {
  const btn = e.target;
  const thisForm = btn.parentElement.parentElement;
  const meContainer = document.querySelector("#me-container");
  const forms = document.querySelectorAll("form");

  const thisFormID = thisForm.getAttribute("id");
  if (thisFormID.includes("login")) {
    // meContainer.style.display = "block";
    meContainer.dataset.show = "true";
  } else {
    meContainer.dataset.show = "false";
  }

  forms.forEach((form) => {
    if (form != thisForm) {
      form.style.display = "flex";
    } else {
      form.style.display = "none";
    }
  });
}
